@using X.PagedList
@using X.PagedList.Mvc.Core
@model IEnumerable<FinalProject.Data.Entities.Station>

@{
    ViewData["Title"] = "Гари";

    var sortOrder = ViewBag.CurrentSort;
    var nameSort = ViewBag.NameSortParam;
    var trackSort = ViewBag.TrackSortParam;
    var addressSort = ViewBag.AddressSortParam;
    var platformSort = ViewBag.PlatformSortParam;

    var queryTitleParams = new Dictionary<string, string>()
    {
        {"nameSort", ViewBag.NameSortParam},
        {"trackSort", ViewBag.TrackSortParam},
        {"addressSort", ViewBag.AddressSort},
        {"platformSort", ViewBag.PlatformSort}
    };

}

<h1 class="text-center">Гари</h1>

@if (User.IsInRole("Admin")) 
{
    <p>
        <a class="btn btn-primary" asp-action="Create">Добави нова гара</a>
    </p>
}

<table class="table table-bordered">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-all-route-data="@queryTitleParams">
                    @Html.DisplayNameFor(model => model.Name)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-all-route-data="@queryTitleParams">
                    @Html.DisplayNameFor(model => model.TracksCount)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-all-route-data="@queryTitleParams">
                    @Html.DisplayNameFor(model => model.Address)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-all-route-data="@queryTitleParams">
                    @Html.DisplayNameFor(model => model.PlatfromsCount)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HasCashDesk)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TracksCount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PlatfromsCount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HasCashDesk)
            </td>
            <td>
                @if (User.IsInRole("Admin"))
                {
                    <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.Id">Редактирай</a> <span>|</span>
                    <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.Id">Виж</a>
                }
                @if (User.Identity.IsAuthenticated)
                {
                    <span>|</span>
                    <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id">Изтрий</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>

<div class="d-flex justify-content-center">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.SortOrder }), new PagedListRenderOptions
{
    UlElementClasses = new List<string> { "pagination" },
    LiElementClasses = new List<string> { "page-item" },
    PageClasses = new List<string> { "page-link" },
    ActiveLiElementClass = "active"
})
</div>